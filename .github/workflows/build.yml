name: Build Brave Browser

on:
  workflow_dispatch:
    inputs:
      build_linux_x64:
        description: 'Build Linux x64'
        required: true
        type: boolean
        default: true
      build_macos_x64:
        description: 'Build macOS x64'
        required: true
        type: boolean
        default: true
      build_windows_x64:
        description: 'Build Windows x64'
        required: true
        type: boolean
        default: false
      build_windows_arm64:
        description: 'Build Windows arm64'
        required: true
        type: boolean
        default: false
      build_linux_arm64:
        description: 'Build Linux arm64'
        required: true
        type: boolean
        default: false
      build_macos_arm64:
        description: 'Build macOS arm64'
        required: true
        type: boolean
        default: false
      publish_release:
        description: 'Publish GitHub release (uncheck for test builds)'
        required: true
        type: boolean
        default: false
      require_approval:
        description: 'Require manual approval before publishing (only if publishing)'
        required: true
        type: boolean
        default: true

jobs:
  # ============================================================================
  # Linux x64 Build Chain (6 stages)
  # ============================================================================
  
  linux-x64-build-1:
    name: Linux x64 - Stage 1
    if: ${{ inputs.build_linux_x64 }}
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: x64
      stage: 1
      from_artifact: false
      finished: 'false'

  linux-x64-build-2:
    name: Linux x64 - Stage 2
    if: ${{ inputs.build_linux_x64 }}
    needs: linux-x64-build-1
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: x64
      stage: 2
      from_artifact: true
      finished: ${{ needs.linux-x64-build-1.outputs.finished }}

  linux-x64-build-3:
    name: Linux x64 - Stage 3
    if: ${{ inputs.build_linux_x64 }}
    needs: linux-x64-build-2
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: x64
      stage: 3
      from_artifact: true
      finished: ${{ needs.linux-x64-build-2.outputs.finished }}

  linux-x64-build-4:
    name: Linux x64 - Stage 4
    if: ${{ inputs.build_linux_x64 }}
    needs: linux-x64-build-3
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: x64
      stage: 4
      from_artifact: true
      finished: ${{ needs.linux-x64-build-3.outputs.finished }}

  linux-x64-build-5:
    name: Linux x64 - Stage 5
    if: ${{ inputs.build_linux_x64 }}
    needs: linux-x64-build-4
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: x64
      stage: 5
      from_artifact: true
      finished: ${{ needs.linux-x64-build-4.outputs.finished }}

  linux-x64-build-6:
    name: Linux x64 - Stage 6 (Final)
    if: ${{ inputs.build_linux_x64 }}
    needs: linux-x64-build-5
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: x64
      stage: 6
      from_artifact: true
      finished: ${{ needs.linux-x64-build-5.outputs.finished }}

  # ============================================================================
  # macOS x64 Build Chain (6 stages) - Runs in parallel with Linux
  # ============================================================================
  
  macos-x64-build-1:
    name: macOS x64 - Stage 1
    if: ${{ inputs.build_macos_x64 }}
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: x64
      stage: 1
      from_artifact: false
      finished: 'false'

  macos-x64-build-2:
    name: macOS x64 - Stage 2
    if: ${{ inputs.build_macos_x64 }}
    needs: macos-x64-build-1
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: x64
      stage: 2
      from_artifact: true
      finished: ${{ needs.macos-x64-build-1.outputs.finished }}

  macos-x64-build-3:
    name: macOS x64 - Stage 3
    if: ${{ inputs.build_macos_x64 }}
    needs: macos-x64-build-2
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: x64
      stage: 3
      from_artifact: true
      finished: ${{ needs.macos-x64-build-2.outputs.finished }}

  macos-x64-build-4:
    name: macOS x64 - Stage 4
    if: ${{ inputs.build_macos_x64 }}
    needs: macos-x64-build-3
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: x64
      stage: 4
      from_artifact: true
      finished: ${{ needs.macos-x64-build-3.outputs.finished }}

  macos-x64-build-5:
    name: macOS x64 - Stage 5
    if: ${{ inputs.build_macos_x64 }}
    needs: macos-x64-build-4
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: x64
      stage: 5
      from_artifact: true
      finished: ${{ needs.macos-x64-build-4.outputs.finished }}

  macos-x64-build-6:
    name: macOS x64 - Stage 6 (Final)
    if: ${{ inputs.build_macos_x64 }}
    needs: macos-x64-build-5
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: x64
      stage: 6
      from_artifact: true
      finished: ${{ needs.macos-x64-build-5.outputs.finished }}

  # ============================================================================
  # Windows x64 Build Chain (6 stages) - Runs in parallel
  # ============================================================================
  
  windows-x64-build-1:
    name: Windows x64 - Stage 1
    if: ${{ inputs.build_windows_x64 }}
    uses: ./.github/workflows/builder.yml
    with:
      platform: windows
      arch: x64
      stage: 1
      from_artifact: false
      finished: 'false'

  windows-x64-build-2:
    name: Windows x64 - Stage 2
    if: ${{ inputs.build_windows_x64 }}
    needs: windows-x64-build-1
    uses: ./.github/workflows/builder.yml
    with:
      platform: windows
      arch: x64
      stage: 2
      from_artifact: true
      finished: ${{ needs.windows-x64-build-1.outputs.finished }}

  windows-x64-build-3:
    name: Windows x64 - Stage 3
    if: ${{ inputs.build_windows_x64 }}
    needs: windows-x64-build-2
    uses: ./.github/workflows/builder.yml
    with:
      platform: windows
      arch: x64
      stage: 3
      from_artifact: true
      finished: ${{ needs.windows-x64-build-2.outputs.finished }}

  windows-x64-build-4:
    name: Windows x64 - Stage 4
    if: ${{ inputs.build_windows_x64 }}
    needs: windows-x64-build-3
    uses: ./.github/workflows/builder.yml
    with:
      platform: windows
      arch: x64
      stage: 4
      from_artifact: true
      finished: ${{ needs.windows-x64-build-3.outputs.finished }}

  windows-x64-build-5:
    name: Windows x64 - Stage 5
    if: ${{ inputs.build_windows_x64 }}
    needs: windows-x64-build-4
    uses: ./.github/workflows/builder.yml
    with:
      platform: windows
      arch: x64
      stage: 5
      from_artifact: true
      finished: ${{ needs.windows-x64-build-4.outputs.finished }}

  windows-x64-build-6:
    name: Windows x64 - Stage 6 (Final)
    if: ${{ inputs.build_windows_x64 }}
    needs: windows-x64-build-5
    uses: ./.github/workflows/builder.yml
    with:
      platform: windows
      arch: x64
      stage: 6
      from_artifact: true
      finished: ${{ needs.windows-x64-build-5.outputs.finished }}

  # ============================================================================
  # Linux arm64 Build Chain (6 stages) - Optional
  # ============================================================================
  
  linux-arm64-build-1:
    name: Linux arm64 - Stage 1
    if: ${{ inputs.build_linux_arm64 }}
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: arm64
      stage: 1
      from_artifact: false
      finished: 'false'

  linux-arm64-build-2:
    name: Linux arm64 - Stage 2
    if: ${{ inputs.build_linux_arm64 }}
    needs: linux-arm64-build-1
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: arm64
      stage: 2
      from_artifact: true
      finished: ${{ needs.linux-arm64-build-1.outputs.finished }}

  linux-arm64-build-3:
    name: Linux arm64 - Stage 3
    if: ${{ inputs.build_linux_arm64 }}
    needs: linux-arm64-build-2
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: arm64
      stage: 3
      from_artifact: true
      finished: ${{ needs.linux-arm64-build-2.outputs.finished }}

  linux-arm64-build-4:
    name: Linux arm64 - Stage 4
    if: ${{ inputs.build_linux_arm64 }}
    needs: linux-arm64-build-3
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: arm64
      stage: 4
      from_artifact: true
      finished: ${{ needs.linux-arm64-build-3.outputs.finished }}

  linux-arm64-build-5:
    name: Linux arm64 - Stage 5
    if: ${{ inputs.build_linux_arm64 }}
    needs: linux-arm64-build-4
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: arm64
      stage: 5
      from_artifact: true
      finished: ${{ needs.linux-arm64-build-4.outputs.finished }}

  linux-arm64-build-6:
    name: Linux arm64 - Stage 6 (Final)
    if: ${{ inputs.build_linux_arm64 }}
    needs: linux-arm64-build-5
    uses: ./.github/workflows/builder.yml
    with:
      platform: linux
      arch: arm64
      stage: 6
      from_artifact: true
      finished: ${{ needs.linux-arm64-build-5.outputs.finished }}

  # ============================================================================
  # macOS arm64 Build Chain (6 stages) - Optional
  # ============================================================================
  
  macos-arm64-build-1:
    name: macOS arm64 - Stage 1
    if: ${{ inputs.build_macos_arm64 }}
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: arm64
      stage: 1
      from_artifact: false
      finished: 'false'

  macos-arm64-build-2:
    name: macOS arm64 - Stage 2
    if: ${{ inputs.build_macos_arm64 }}
    needs: macos-arm64-build-1
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: arm64
      stage: 2
      from_artifact: true
      finished: ${{ needs.macos-arm64-build-1.outputs.finished }}

  macos-arm64-build-3:
    name: macOS arm64 - Stage 3
    if: ${{ inputs.build_macos_arm64 }}
    needs: macos-arm64-build-2
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: arm64
      stage: 3
      from_artifact: true
      finished: ${{ needs.macos-arm64-build-2.outputs.finished }}

  macos-arm64-build-4:
    name: macOS arm64 - Stage 4
    if: ${{ inputs.build_macos_arm64 }}
    needs: macos-arm64-build-3
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: arm64
      stage: 4
      from_artifact: true
      finished: ${{ needs.macos-arm64-build-3.outputs.finished }}

  macos-arm64-build-5:
    name: macOS arm64 - Stage 5
    if: ${{ inputs.build_macos_arm64 }}
    needs: macos-arm64-build-4
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: arm64
      stage: 5
      from_artifact: true
      finished: ${{ needs.macos-arm64-build-4.outputs.finished }}

  macos-arm64-build-6:
    name: macOS arm64 - Stage 6 (Final)
    if: ${{ inputs.build_macos_arm64 }}
    needs: macos-arm64-build-5
    uses: ./.github/workflows/builder.yml
    with:
      platform: macos
      arch: arm64
      stage: 6
      from_artifact: true
      finished: ${{ needs.macos-arm64-build-5.outputs.finished }}

  # ============================================================================
  # Collect All Artifacts - Waits for ALL selected builds to complete
  # ============================================================================
  
  collect-artifacts:
    name: Collect All Build Artifacts
    needs: [linux-x64-build-6, macos-x64-build-6, windows-x64-build-6, linux-arm64-build-6, macos-arm64-build-6]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Download Linux x64 artifact
        if: ${{ inputs.build_linux_x64 }}
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: brave-browser-linux
          path: ./artifacts/linux-x64
      
      - name: Download macOS x64 artifact
        if: ${{ inputs.build_macos_x64 }}
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: brave-browser-macos
          path: ./artifacts/macos-x64
      
      - name: Download Windows x64 artifact
        if: ${{ inputs.build_windows_x64 }}
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: brave-browser-windows
          path: ./artifacts/windows-x64
      
      - name: Download Linux arm64 artifact
        if: ${{ inputs.build_linux_arm64 }}
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: brave-browser-linux-arm64
          path: ./artifacts/linux-arm64
      
      - name: Download macOS arm64 artifact
        if: ${{ inputs.build_macos_arm64 }}
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: brave-browser-macos-arm64
          path: ./artifacts/macos-arm64
      
      - name: List all artifacts
        run: |
          echo "=== All Build Artifacts ==="
          if [ -d ./artifacts ]; then
            find ./artifacts -type f -exec ls -lh {} \;
          else
            echo "No artifacts directory found"
          fi
          echo ""
          echo "✓ All selected builds completed!"
          if [ "${{ inputs.publish_release }}" == "true" ]; then
            echo "✓ Ready for release publishing"
          else
            echo "ℹ️  Test build - artifacts available in workflow run"
            echo "ℹ️  Release publishing is disabled"
          fi
      
      - name: Upload combined artifacts for release
        uses: actions/upload-artifact@v4
        with:
          name: brave-browser-all-platforms
          path: ./artifacts/
          retention-days: 7

  # ============================================================================
  # Publish Release - Optional, With Optional Manual Approval
  # ============================================================================
  
  publish-release:
    name: 📦 Publish Release
    if: ${{ inputs.publish_release }}
    needs: collect-artifacts
    runs-on: ubuntu-latest
    environment: ${{ inputs.require_approval && 'production' || '' }}
    
    steps:
      - name: Download all platform artifacts
        uses: actions/download-artifact@v4
        with:
          name: brave-browser-all-platforms
          path: ./release
      
      - name: Display release contents
        run: |
          echo "=== Release Contents ==="
          find ./release -type f -exec ls -lh {} \;
          echo ""
          echo "Publishing to GitHub Releases..."
      
      - name: Generate build summary
        id: summary
        run: |
          echo "## Build Configuration" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Linux x64: ${{ inputs.build_linux_x64 }}" >> $GITHUB_STEP_SUMMARY
          echo "- macOS x64: ${{ inputs.build_macos_x64 }}" >> $GITHUB_STEP_SUMMARY
          echo "- Windows x64: ${{ inputs.build_windows_x64 }}" >> $GITHUB_STEP_SUMMARY
          echo "- Linux arm64: ${{ inputs.build_linux_arm64 }}" >> $GITHUB_STEP_SUMMARY
          echo "- macOS arm64: ${{ inputs.build_macos_arm64 }}" >> $GITHUB_STEP_SUMMARY
          echo "- Publishing release: ${{ inputs.publish_release }}" >> $GITHUB_STEP_SUMMARY
          echo "- Approval required: ${{ inputs.require_approval }}" >> $GITHUB_STEP_SUMMARY
          
          PLATFORMS=""
          ${{ inputs.build_linux_x64 }} && PLATFORMS="${PLATFORMS}- Linux x64\n"
          ${{ inputs.build_macos_x64 }} && PLATFORMS="${PLATFORMS}- macOS x64\n"
          ${{ inputs.build_windows_x64 }} && PLATFORMS="${PLATFORMS}- Windows x64\n"
          ${{ inputs.build_linux_arm64 }} && PLATFORMS="${PLATFORMS}- Linux arm64\n"
          ${{ inputs.build_macos_arm64 }} && PLATFORMS="${PLATFORMS}- macOS arm64\n"
          echo "platforms<<EOF" >> $GITHUB_OUTPUT
          echo -e "$PLATFORMS" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}-${{ github.sha }}
          name: Brave Browser Build ${{ github.run_number }}
          body: |
            ## Brave Browser - Multi-Platform Build
            
            **Build**: #${{ github.run_number }}
            **Commit**: ${{ github.sha }}
            **Triggered by**: @${{ github.actor }}
            **Date**: ${{ github.event.repository.updated_at }}
            
            ### Platforms Included:
            ${{ steps.summary.outputs.platforms }}
            
            ### Installation
            Download the appropriate package for your platform and extract it.
          draft: false
          prerelease: false
          fail_on_unmatched_files: true
          files: |
            ./release/**/*.tar.xz
            ./release/**/*.zip
      
      - name: Release published
        run: |
          echo "✓ Release published successfully!"
          echo "Check: https://github.com/${{ github.repository }}/releases"
